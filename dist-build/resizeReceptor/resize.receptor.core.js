define("resize.receptor.core",["resize.receptor.store"],function(e){function t(t,r){t.forEach(function(t){var r=t.target.getAttribute("rrid");if(r&&e.registeredElem(r)){var i=e.getDims(r);if(i.height!==t.target.offsetHeight||i.width!==t.target.offsetWidth){var s={};s.elem=t.target,e.updateDims(r,{height:t.target.offsetHeight,width:t.target.offsetWidth}),-1!==r.indexOf("_")&&(r=r.slice(0,r.indexOf("_"))),o.hasOwnProperty(r)&&o[r](s)}}})}function r(){return Math.random().toString(36).replace("0.","")}var i,o={},s={};return s.initialize=function(e){if(e)e.observeElem||(e.observeElem=document.body);else{var e={};e.observeElem=document.body}i=new MutationObserver(t),i.observe(e.observeElem,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["style"]})},s.stopListening=function(){i.disconnect()},s.listenTo=function(t,i){if(this.callback=i,t.constructor===Array){var s=r();t.forEach(function(t){if(!(t instanceof Element))throw"Expected array of DOM elements.";var i=r();t.setAttribute("rrid",s+"_"+i),e.storeDims(s+"_"+i,{height:t.offsetHeight,width:t.offsetWidth})}),o[s]=i}else{if(!(t instanceof Element))throw"First parameter passed is neither an array or a DOM Element.Got "+typeof t;var n=r();t.setAttribute("rrid",n),e.storeDims(n,{height:t.offsetHeight,width:t.offsetWidth}),o[n]=i}},s});